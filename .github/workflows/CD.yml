name: CD
on:
  push:
    branches:
      - dev

  release:
    types:
      - created

  workflow_dispatch:

jobs:
  build:
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout the code
        uses: actions/checkout@v2

      - name: install docker
        uses: docker-practice/actions-setup-docker@master

      - name: login to docker registry
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: create image
        run: | 
          if ${{ github.ref_name != 'dev' && github.event_name == 'workflow_dispatch' }}
          then
            echo "Workflow dispatch is only allowed on dev branch."
            exit 1
          fi

          IMAGE=${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }}
          if ${{ github.ref_name == 'dev' }}
          then
            IMAGE=${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }}
          else
            IMAGE=${{ secrets.DOCKER_REPOSITORY }}:${{ github.ref_name }}
          fi
          
          docker build -t $IMAGE .

      - name: push image
        run: |
          IMAGE=${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }}
          if ${{ github.ref_name == 'dev' }}
          then
            IMAGE=${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }}
          else
            IMAGE=${{ secrets.DOCKER_REPOSITORY }}:${{ github.ref_name }}
          fi
          
          docker push $IMAGE

  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    needs: build
    steps:
      - name: checkout the code
        uses: actions/checkout@v2

      - name: Deploy image to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            IMAGE_TAG=${{ github.sha }}
            if ${{ github.ref_name == 'dev' }}
            then
              IMAGE_TAG=${{ github.sha }}
              BUCKET_NAME=pdfforge-dev-assets
            else
              IMAGE_TAG=${{ github.ref_name }}
              BUCKET_NAME=pdfforge-prod-assets
            fi
            docker pull ${{ secrets.DOCKER_REPOSITORY }}:$IMAGE_TAG
            docker rm -f pdfforge-app-${{ github.ref_name}} || true
            docker run --name pdfforge-app-${{ github.ref_name}} -d \
              -e APP_AWS_S3_BUCKET_NAME=$BUCKET_NAME \
              -e APP_AWS_REGION_NAME=ca-central-1 \
              -e DOCKER_REPOSITORY=${{ secrets.DOCKER_REPOSITORY }} \
              -e DOCKER_IMAGE_TAG=$IMAGE_TAG \
              -p 80:5000 ${{ secrets.DOCKER_REPOSITORY }}:$IMAGE_TAG
            

  healthcheck:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    needs: deploy
    steps:
      - name: Check the deployed service URL
        uses: jtalk/url-health-check-action@v4
        with:
          # Check the following URLs one by one sequentially
          url: http://${{ secrets.SSH_HOST }}/health
          follow-redirect: true # Optional, defaults to false
          max-attempts: 3 # Optional, defaults to 1
          retry-delay: 5s # Optional, only applicable to max-attempts > 1
